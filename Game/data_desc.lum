
-- class data_desc begin
class('data_desc')

function data_desc._set_name(self, name)
	self._name = name
	self._notify_name = 'on_set_' .. name
end

-- call by class, see class.lum _index
function data_desc._get(self, owner)
	local value = owner._attrs[self._name]
	if value == nil then
		owner._attrs[self._name] = self._default
		return self._default
	end
	return value
end

-- see class.lum _newindex
function data_desc._set(self, owner, new_value)
	print(_text('data_desc._set'), _text(self._name))
	local notify = owner[self._notify_name]
	if notify then
		local old_value = owner._attrs[self._name]
		owner._attrs[self._name] = new_value
		notify(self, new_value)
		return
	end

	local global_notify = owner['on_set_attr']
	if not global_notify then
		owner._attrs[self._name] = new_value
		return
	end
	local old_value = owner._attrs[self._name]
	owner._attrs[self._name] = new_value
	global_notify(owner, self, new_value)
end
-- class data_desc end

class('i32', data_desc)

function i32._init(self, default, ...)
	self._default = default
end

class('i16', data_desc)

function i16._init(self, default, ...)

end

class('str', data_desc)

function str._init(self, default, ...)

end

class('array', data_desc)

function array._init(self, item_type, ...)

end