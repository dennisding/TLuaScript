
import('object')
import('actor_map')

-- class actor
class('actor', object.object)

-- class actor end

local function _format_actor_name(name)
	return name
end

local function _get_lua_type(ctype)
	local lua_type = _sys.ctypes[ctype]
	if lua_type ~= nil then
		return lua_type
	end

	local ctype_name = _cpp_object_get_name(ctype)
	ctype_name = _format_actor_name(ctype_name)

	local type_name = actor_map[ctype_name] or ctype_name
	local module = safe_import(type_name)

	lua_type = module[type_name]
	if lua_type == nil then
--		lua_type = actor
		lua_type = class(type_name, actor, 'clean')
	end
	_sys.ctypes[ctype] = lua_type
	return lua_type
end

function new_actor(cobject, ctype)
	local instance = new_proxy(cobject, ctype)
	
	instance:_call_init()
	return instance
end

function new_proxy(cobject, ctype)
	local lua_type = _get_lua_type(ctype)

	-- test code
	local pid = 1 -- 1号玩家
	local data = _data.player[1]

	local instance = lua_type:_new_instance(data)

	rawset(instance, '_co', cobject)
	rawset(instance, '_ct', ctype)
	object.set_vtable(instance)

	return instance
end
