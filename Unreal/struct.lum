
import('ctype')
import('struct_map')

class('cstruct')

local function _reset_metatable(self)
	local ctype = rawget(self, '_ct')

	local lua_type = _sys.ctypes[ctype]
	if lua_type == nil then
		local ctype_name = _cpp_struct_get_name(ctype)

		local type_name = struct_map[ctype_name] or ('Structs.' .. ctype_name)
		local module = safe_import(type_name)
		local lua_type = module[ctype_name] or cstruct

		_sys.ctypes[ctype] = lua_type
	end

	setmetatable(self, lua_type)
	if self._init then
		self:_init()
	end
end

class('cstruct_proxy')
-- _ls means lua struct for c++
_set_global('_ls', cstruct_proxy)

function cstruct_proxy.__index(self, name)
	_reset_metatable(self, type_prefix)
	return self[name]
end

function cstruct_proxy.__newindex(self, name, value)
	_reset_metatable(self, type_prefix)
	self[name] = value
end
