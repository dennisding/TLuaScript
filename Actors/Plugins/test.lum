
import('fun_utils')

function _init(self)
end

function test(self, channel, mesh)
	local input = self.PlayerInputComponent
	local callback = fun_utils.fun(self.jump, self)
	input:BindAction(self.JumpAction, Enum.ETriggerEvent.Started, callback)

	self.some_value = 1234
end

function use_skill(self, skill_id)
	local data = _datas.skill[skill_id]

	printf("use_skill: %d, name=%s", skill_id, data.name)
end

function test_method(self, value, msg)
	print(_text('test_method'), towstring(value), msg)
	local mesh = self:SayHello(1314, _text('中文消息'))

	self.Mesh1P = mesh
	print(towstring(mesh))
	-- assert(mesh == self.Mesh1P)
	-- mesh.bCastDynamicShadow = false
	-- mesh.CastShadow = false
end

function jump(self, input_value)
	print(_text('actor jump!!!!'))
end

function pass_struct(self, channel)
end

function pass_component(self)
	print(_text('component Mesh from c++'), _text(tostring(com)))
end