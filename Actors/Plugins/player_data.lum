
name = data_desc.str(_text(''), 'save')
max_hp = data_desc.i32(100, 'save')
max_mp = data_desc.i32(1000, 'save')
hp = data_desc.i32(100, 'save')
mp = data_desc.i32(1000, 'save')
gold = data_desc.i16(0, 'save')

quests = data_desc.array(data_desc.i16(0), 'save')
item = data_desc.item('save')

items = data_desc.array(data_desc.item('save'), 'save')
kill_counts = data_desc.map(data_desc.i32(0, 'save'), data_desc.i32(0, 'save'), 'save')

function _init(self)
	self.name = _text('勇者(hero)')
	self.hp = 33

	self.quests:insert(100)
	-- self.quests:insert(101)
	-- self.quests:insert(102)
	-- self.quests:insert(103)
	self.quests:remove_at(1)

	for index, quest_id in self.quests:iter() do
		print(_text('has_quest'), towstring(quest_id))
	end
end

function on_kill_counts_add(self, key, value)
	print(_text('on_kill_counts_add'), towstring(key), towstring(value))
end

function on_kill_counts_update(self, key, value)
	print(_text('on_kill_counts_add'), towstring(key), towstring(value))
end

function on_kill_counts_remove(self, key)
	print(_text('on_kill_counts_add'), towstring(key), towstring(value))
end

function test_kill_counts(self)
	self.kill_counts:add(100, 1)
	self.kill_counts:add(101, 2)
	self.kill_counts:update(100, 3)
	self.kill_counts:remove(101)
end

function test_items(self)
	local new_item = data_types.item.new(100)
	for index, item in self.items:iter() do
		print(_text("item"), towstring(item.id), item.name)
	end

--	self.items:remove(new_item)

	local item = self.items:get(1)
	item.price = 30

	for index, item in self.items:iter() do
		print(_text("item"), towstring(item.id), item.name)
	end
end

function on_attr_changed(self, desc)
	print(_text('on_attr_changed'), _text(desc.name))
end

function on_hp_set(self, hp)
	print(_text('on_hp_set'), towstring(hp))
end

function on_name_set(self, name)
	print(_text('on_name_set'), towstring(name))
	_gui.main:set_name(name)
end

function on_quests_set(self, quests)
	print(_text('on_quests_set'))
end

function on_quests_insert(self, item, slot)
	print(_text('on_quests_insert'), towstring(item), towstring(slot))
end

function on_quests_remove(self, slot)
	print(_text('on_quests_remove'), towstring(slot))
end
